/* Generated By:JavaCC: Do not edit this line. MiniJavaPrettyPrinterConstants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MiniJavaPrettyPrinterConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CLASS = 5;
  /** RegularExpression Id. */
  int PUBLIC = 6;
  /** RegularExpression Id. */
  int STATIC = 7;
  /** RegularExpression Id. */
  int VOID = 8;
  /** RegularExpression Id. */
  int NEW = 9;
  /** RegularExpression Id. */
  int MAIN = 10;
  /** RegularExpression Id. */
  int STRING = 11;
  /** RegularExpression Id. */
  int EXTENDS = 12;
  /** RegularExpression Id. */
  int RETURN = 13;
  /** RegularExpression Id. */
  int BOOLEAN = 14;
  /** RegularExpression Id. */
  int INT = 15;
  /** RegularExpression Id. */
  int IF = 16;
  /** RegularExpression Id. */
  int ELSE = 17;
  /** RegularExpression Id. */
  int WHILE = 18;
  /** RegularExpression Id. */
  int PRINT = 19;
  /** RegularExpression Id. */
  int STRING_LITERAL = 20;
  /** RegularExpression Id. */
  int EQUAL = 21;
  /** RegularExpression Id. */
  int LPAREN = 22;
  /** RegularExpression Id. */
  int RPAREN = 23;
  /** RegularExpression Id. */
  int LBRACKET = 24;
  /** RegularExpression Id. */
  int RBRACKET = 25;
  /** RegularExpression Id. */
  int SEMICOLON = 26;
  /** RegularExpression Id. */
  int ADD_OP = 27;
  /** RegularExpression Id. */
  int MINUS_OP = 28;
  /** RegularExpression Id. */
  int MULT_OP = 29;
  /** RegularExpression Id. */
  int DIV_OP = 30;
  /** RegularExpression Id. */
  int LENGTH = 31;
  /** RegularExpression Id. */
  int DOT = 32;
  /** RegularExpression Id. */
  int NUMBER = 33;
  /** RegularExpression Id. */
  int TRUE = 34;
  /** RegularExpression Id. */
  int FALSE = 35;
  /** RegularExpression Id. */
  int THIS = 36;
  /** RegularExpression Id. */
  int NOT = 37;
  /** RegularExpression Id. */
  int COMMA = 38;
  /** RegularExpression Id. */
  int LBRACE = 39;
  /** RegularExpression Id. */
  int RBRACE = 40;
  /** RegularExpression Id. */
  int LESS_THAN = 41;
  /** RegularExpression Id. */
  int GREATER_THAN = 42;
  /** RegularExpression Id. */
  int EQUALS = 43;
  /** RegularExpression Id. */
  int NOT_EQUALS = 44;
  /** RegularExpression Id. */
  int AND = 45;
  /** RegularExpression Id. */
  int OR = 46;
  /** RegularExpression Id. */
  int LESS_THAN_OR_EQUAL = 47;
  /** RegularExpression Id. */
  int GREATER_THAN_OR_EQUAL = 48;
  /** RegularExpression Id. */
  int INCREMENT = 49;
  /** RegularExpression Id. */
  int DECREMENT = 50;
  /** RegularExpression Id. */
  int PLUS_EQUAL = 51;
  /** RegularExpression Id. */
  int MINUS_EQUAL = 52;
  /** RegularExpression Id. */
  int MULT_EQUAL = 53;
  /** RegularExpression Id. */
  int DIV_EQUAL = 54;
  /** RegularExpression Id. */
  int ID = 55;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 56;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 57;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\" \"",
    "\"class\"",
    "\"public\"",
    "\"static\"",
    "\"void\"",
    "\"new\"",
    "\"main\"",
    "\"String\"",
    "\"extends\"",
    "\"return\"",
    "\"boolean\"",
    "\"int\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"System.out.println\"",
    "<STRING_LITERAL>",
    "\"=\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"length\"",
    "\".\"",
    "<NUMBER>",
    "\"true\"",
    "\"false\"",
    "\"this\"",
    "\"!\"",
    "\",\"",
    "\"{\"",
    "\"}\"",
    "\"<\"",
    "\">\"",
    "\"==\"",
    "\"!=\"",
    "\"&&\"",
    "\"||\"",
    "\"<=\"",
    "\">=\"",
    "\"++\"",
    "\"--\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "<ID>",
    "<SINGLE_LINE_COMMENT>",
    "<MULTI_LINE_COMMENT>",
  };

}
