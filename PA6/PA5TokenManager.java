/* Generated By:JavaCC: Do not edit this line. PA5TokenManager.java */
import syntaxtree.*;

/** Token Manager. */
public class PA5TokenManager implements PA5Constants
{

  /** Debug output. */
  public static  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public static  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private static final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0xffffa0L) != 0L)
         {
            jjmatchedKind = 43;
            return 2;
         }
         return -1;
      case 1:
         if ((active0 & 0x20000L) != 0L)
            return 2;
         if ((active0 & 0xfdffa0L) != 0L)
         {
            jjmatchedKind = 43;
            jjmatchedPos = 1;
            return 2;
         }
         return -1;
      case 2:
         if ((active0 & 0x802000L) != 0L)
            return 2;
         if ((active0 & 0x7ddfa0L) != 0L)
         {
            jjmatchedKind = 43;
            jjmatchedPos = 2;
            return 2;
         }
         return -1;
      case 3:
         if ((active0 & 0x44c200L) != 0L)
            return 2;
         if ((active0 & 0x391da0L) != 0L)
         {
            jjmatchedKind = 43;
            jjmatchedPos = 3;
            return 2;
         }
         return -1;
      case 4:
         if ((active0 & 0x190080L) != 0L)
            return 2;
         if ((active0 & 0x201d20L) != 0L)
         {
            jjmatchedKind = 43;
            jjmatchedPos = 4;
            return 2;
         }
         return -1;
      case 5:
         if ((active0 & 0x201520L) != 0L)
            return 2;
         if ((active0 & 0x800L) != 0L)
         {
            jjmatchedKind = 43;
            jjmatchedPos = 5;
            return 2;
         }
         return -1;
      case 6:
         if ((active0 & 0x800L) != 0L)
            return 2;
         return -1;
      default :
         return -1;
   }
}
private static final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
static private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
static private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 33:
         return jjStopAtPos(0, 24);
      case 35:
         return jjMoveStringLiteralDfa1_0(0x40L);
      case 38:
         return jjMoveStringLiteralDfa1_0(0x40000000L);
      case 40:
         return jjStopAtPos(0, 33);
      case 41:
         return jjStopAtPos(0, 34);
      case 42:
         return jjStopAtPos(0, 41);
      case 43:
         return jjStopAtPos(0, 39);
      case 44:
         return jjStopAtPos(0, 27);
      case 45:
         return jjStopAtPos(0, 40);
      case 46:
         return jjStopAtPos(0, 28);
      case 58:
         return jjStopAtPos(0, 25);
      case 59:
         return jjStopAtPos(0, 26);
      case 60:
         return jjStopAtPos(0, 31);
      case 61:
         return jjStopAtPos(0, 29);
      case 62:
         return jjStopAtPos(0, 32);
      case 83:
         return jjMoveStringLiteralDfa1_0(0x400L);
      case 91:
         return jjStopAtPos(0, 35);
      case 93:
         return jjStopAtPos(0, 36);
      case 98:
         return jjMoveStringLiteralDfa1_0(0x4000L);
      case 99:
         return jjMoveStringLiteralDfa1_0(0x80L);
      case 101:
         return jjMoveStringLiteralDfa1_0(0x40800L);
      case 102:
         return jjMoveStringLiteralDfa1_0(0x10000L);
      case 105:
         return jjMoveStringLiteralDfa1_0(0x22000L);
      case 108:
         return jjMoveStringLiteralDfa1_0(0x200000L);
      case 110:
         return jjMoveStringLiteralDfa1_0(0x800000L);
      case 112:
         return jjMoveStringLiteralDfa1_0(0x100020L);
      case 114:
         return jjMoveStringLiteralDfa1_0(0x1000L);
      case 115:
         return jjMoveStringLiteralDfa1_0(0x100L);
      case 116:
         return jjMoveStringLiteralDfa1_0(0x408000L);
      case 118:
         return jjMoveStringLiteralDfa1_0(0x200L);
      case 119:
         return jjMoveStringLiteralDfa1_0(0x80000L);
      case 123:
         return jjStopAtPos(0, 37);
      case 125:
         return jjStopAtPos(0, 38);
      default :
         return jjMoveNfa_0(1, 0);
   }
}
static private int jjMoveStringLiteralDfa1_0(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 38:
         if ((active0 & 0x40000000L) != 0L)
            return jjStopAtPos(1, 30);
         break;
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x10000L);
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0xa01000L);
      case 102:
         if ((active0 & 0x20000L) != 0L)
            return jjStartNfaWithStates_0(1, 17, 2);
         break;
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x480000L);
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x40L);
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0x40080L);
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000L);
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0x4200L);
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0x108000L);
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0x500L);
      case 117:
         return jjMoveStringLiteralDfa2_0(active0, 0x20L);
      case 120:
         return jjMoveStringLiteralDfa2_0(active0, 0x800L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0);
}
static private int jjMoveStringLiteralDfa2_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(0, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x180L);
      case 98:
         return jjMoveStringLiteralDfa3_0(active0, 0x20L);
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x580200L);
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x10000L);
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x200040L);
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x4000L);
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0x400L);
      case 115:
         return jjMoveStringLiteralDfa3_0(active0, 0x40000L);
      case 116:
         if ((active0 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(2, 13, 2);
         return jjMoveStringLiteralDfa3_0(active0, 0x1800L);
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000L);
      case 119:
         if ((active0 & 0x800000L) != 0L)
            return jjStartNfaWithStates_0(2, 23, 2);
         break;
      default :
         break;
   }
   return jjStartNfa_0(1, active0);
}
static private int jjMoveStringLiteralDfa3_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0x40L);
      case 100:
         if ((active0 & 0x200L) != 0L)
            return jjStartNfaWithStates_0(3, 9, 2);
         break;
      case 101:
         if ((active0 & 0x8000L) != 0L)
            return jjStartNfaWithStates_0(3, 15, 2);
         else if ((active0 & 0x40000L) != 0L)
            return jjStartNfaWithStates_0(3, 18, 2);
         return jjMoveStringLiteralDfa4_0(active0, 0x800L);
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000L);
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0x400L);
      case 108:
         if ((active0 & 0x4000L) != 0L)
            return jjStartNfaWithStates_0(3, 14, 2);
         return jjMoveStringLiteralDfa4_0(active0, 0x80020L);
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0x100000L);
      case 115:
         if ((active0 & 0x400000L) != 0L)
            return jjStartNfaWithStates_0(3, 22, 2);
         return jjMoveStringLiteralDfa4_0(active0, 0x10080L);
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0x100L);
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0x1000L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0);
}
static private int jjMoveStringLiteralDfa4_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 101:
         if ((active0 & 0x10000L) != 0L)
            return jjStartNfaWithStates_0(4, 16, 2);
         else if ((active0 & 0x80000L) != 0L)
            return jjStartNfaWithStates_0(4, 19, 2);
         break;
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x120L);
      case 108:
         return jjMoveStringLiteralDfa5_0(active0, 0x40L);
      case 110:
         return jjMoveStringLiteralDfa5_0(active0, 0xc00L);
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x1000L);
      case 115:
         if ((active0 & 0x80L) != 0L)
            return jjStartNfaWithStates_0(4, 7, 2);
         break;
      case 116:
         if ((active0 & 0x100000L) != 0L)
            return jjStartNfaWithStates_0(4, 20, 2);
         return jjMoveStringLiteralDfa5_0(active0, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0);
}
static private int jjMoveStringLiteralDfa5_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(3, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0);
      return 5;
   }
   switch(curChar)
   {
      case 99:
         if ((active0 & 0x20L) != 0L)
            return jjStartNfaWithStates_0(5, 5, 2);
         else if ((active0 & 0x100L) != 0L)
            return jjStartNfaWithStates_0(5, 8, 2);
         break;
      case 100:
         return jjMoveStringLiteralDfa6_0(active0, 0x800L);
      case 103:
         if ((active0 & 0x400L) != 0L)
            return jjStartNfaWithStates_0(5, 10, 2);
         break;
      case 104:
         if ((active0 & 0x200000L) != 0L)
            return jjStartNfaWithStates_0(5, 21, 2);
         break;
      case 110:
         if ((active0 & 0x1000L) != 0L)
            return jjStartNfaWithStates_0(5, 12, 2);
         break;
      case 117:
         return jjMoveStringLiteralDfa6_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0);
}
static private int jjMoveStringLiteralDfa6_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(4, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0);
      return 6;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa7_0(active0, 0x40L);
      case 115:
         if ((active0 & 0x800L) != 0L)
            return jjStartNfaWithStates_0(6, 11, 2);
         break;
      default :
         break;
   }
   return jjStartNfa_0(5, active0);
}
static private int jjMoveStringLiteralDfa7_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(5, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0);
      return 7;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa8_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(6, active0);
}
static private int jjMoveStringLiteralDfa8_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(6, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0);
      return 8;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa9_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0);
}
static private int jjMoveStringLiteralDfa9_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(7, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0);
      return 9;
   }
   switch(curChar)
   {
      case 60:
         return jjMoveStringLiteralDfa10_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0);
}
static private int jjMoveStringLiteralDfa10_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(8, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0);
      return 10;
   }
   switch(curChar)
   {
      case 115:
         return jjMoveStringLiteralDfa11_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0);
}
static private int jjMoveStringLiteralDfa11_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(9, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0);
      return 11;
   }
   switch(curChar)
   {
      case 116:
         return jjMoveStringLiteralDfa12_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(10, active0);
}
static private int jjMoveStringLiteralDfa12_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(10, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0);
      return 12;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa13_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0);
}
static private int jjMoveStringLiteralDfa13_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(11, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0);
      return 13;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa14_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(12, active0);
}
static private int jjMoveStringLiteralDfa14_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(12, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(13, active0);
      return 14;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa15_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(13, active0);
}
static private int jjMoveStringLiteralDfa15_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(13, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(14, active0);
      return 15;
   }
   switch(curChar)
   {
      case 46:
         return jjMoveStringLiteralDfa16_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(14, active0);
}
static private int jjMoveStringLiteralDfa16_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(14, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(15, active0);
      return 16;
   }
   switch(curChar)
   {
      case 104:
         return jjMoveStringLiteralDfa17_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(15, active0);
}
static private int jjMoveStringLiteralDfa17_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(15, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(16, active0);
      return 17;
   }
   switch(curChar)
   {
      case 62:
         return jjMoveStringLiteralDfa18_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(16, active0);
}
static private int jjMoveStringLiteralDfa18_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(16, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(17, active0);
      return 18;
   }
   switch(curChar)
   {
      case 13:
         return jjMoveStringLiteralDfa19_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(17, active0);
}
static private int jjMoveStringLiteralDfa19_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(17, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(18, active0);
      return 19;
   }
   switch(curChar)
   {
      case 10:
         return jjMoveStringLiteralDfa20_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(18, active0);
}
static private int jjMoveStringLiteralDfa20_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(18, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(19, active0);
      return 20;
   }
   switch(curChar)
   {
      case 35:
         return jjMoveStringLiteralDfa21_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(19, active0);
}
static private int jjMoveStringLiteralDfa21_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(19, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(20, active0);
      return 21;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa22_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(20, active0);
}
static private int jjMoveStringLiteralDfa22_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(20, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(21, active0);
      return 22;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa23_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(21, active0);
}
static private int jjMoveStringLiteralDfa23_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(21, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(22, active0);
      return 23;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa24_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(22, active0);
}
static private int jjMoveStringLiteralDfa24_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(22, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(23, active0);
      return 24;
   }
   switch(curChar)
   {
      case 108:
         return jjMoveStringLiteralDfa25_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(23, active0);
}
static private int jjMoveStringLiteralDfa25_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(23, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(24, active0);
      return 25;
   }
   switch(curChar)
   {
      case 117:
         return jjMoveStringLiteralDfa26_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(24, active0);
}
static private int jjMoveStringLiteralDfa26_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(24, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(25, active0);
      return 26;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa27_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(25, active0);
}
static private int jjMoveStringLiteralDfa27_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(25, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(26, active0);
      return 27;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa28_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(26, active0);
}
static private int jjMoveStringLiteralDfa28_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(26, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(27, active0);
      return 28;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa29_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(27, active0);
}
static private int jjMoveStringLiteralDfa29_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(27, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(28, active0);
      return 29;
   }
   switch(curChar)
   {
      case 60:
         return jjMoveStringLiteralDfa30_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(28, active0);
}
static private int jjMoveStringLiteralDfa30_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(28, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(29, active0);
      return 30;
   }
   switch(curChar)
   {
      case 115:
         return jjMoveStringLiteralDfa31_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(29, active0);
}
static private int jjMoveStringLiteralDfa31_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(29, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(30, active0);
      return 31;
   }
   switch(curChar)
   {
      case 116:
         return jjMoveStringLiteralDfa32_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(30, active0);
}
static private int jjMoveStringLiteralDfa32_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(30, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(31, active0);
      return 32;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa33_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(31, active0);
}
static private int jjMoveStringLiteralDfa33_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(31, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(32, active0);
      return 33;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa34_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(32, active0);
}
static private int jjMoveStringLiteralDfa34_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(32, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(33, active0);
      return 34;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa35_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(33, active0);
}
static private int jjMoveStringLiteralDfa35_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(33, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(34, active0);
      return 35;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa36_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(34, active0);
}
static private int jjMoveStringLiteralDfa36_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(34, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(35, active0);
      return 36;
   }
   switch(curChar)
   {
      case 108:
         return jjMoveStringLiteralDfa37_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(35, active0);
}
static private int jjMoveStringLiteralDfa37_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(35, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(36, active0);
      return 37;
   }
   switch(curChar)
   {
      case 46:
         return jjMoveStringLiteralDfa38_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(36, active0);
}
static private int jjMoveStringLiteralDfa38_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(36, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(37, active0);
      return 38;
   }
   switch(curChar)
   {
      case 104:
         return jjMoveStringLiteralDfa39_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(37, active0);
}
static private int jjMoveStringLiteralDfa39_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(37, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(38, active0);
      return 39;
   }
   switch(curChar)
   {
      case 62:
         return jjMoveStringLiteralDfa40_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(38, active0);
}
static private int jjMoveStringLiteralDfa40_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(38, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(39, active0);
      return 40;
   }
   switch(curChar)
   {
      case 13:
         return jjMoveStringLiteralDfa41_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(39, active0);
}
static private int jjMoveStringLiteralDfa41_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(39, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(40, active0);
      return 41;
   }
   switch(curChar)
   {
      case 10:
         return jjMoveStringLiteralDfa42_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(40, active0);
}
static private int jjMoveStringLiteralDfa42_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(40, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(41, active0);
      return 42;
   }
   switch(curChar)
   {
      case 118:
         return jjMoveStringLiteralDfa43_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(41, active0);
}
static private int jjMoveStringLiteralDfa43_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(41, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(42, active0);
      return 43;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa44_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(42, active0);
}
static private int jjMoveStringLiteralDfa44_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(42, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(43, active0);
      return 44;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa45_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(43, active0);
}
static private int jjMoveStringLiteralDfa45_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(43, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(44, active0);
      return 45;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa46_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(44, active0);
}
static private int jjMoveStringLiteralDfa46_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(44, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(45, active0);
      return 46;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa47_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(45, active0);
}
static private int jjMoveStringLiteralDfa47_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(45, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(46, active0);
      return 47;
   }
   switch(curChar)
   {
      case 112:
         return jjMoveStringLiteralDfa48_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(46, active0);
}
static private int jjMoveStringLiteralDfa48_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(46, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(47, active0);
      return 48;
   }
   switch(curChar)
   {
      case 114:
         return jjMoveStringLiteralDfa49_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(47, active0);
}
static private int jjMoveStringLiteralDfa49_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(47, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(48, active0);
      return 49;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa50_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(48, active0);
}
static private int jjMoveStringLiteralDfa50_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(48, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(49, active0);
      return 50;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa51_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(49, active0);
}
static private int jjMoveStringLiteralDfa51_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(49, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(50, active0);
      return 51;
   }
   switch(curChar)
   {
      case 116:
         return jjMoveStringLiteralDfa52_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(50, active0);
}
static private int jjMoveStringLiteralDfa52_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(50, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(51, active0);
      return 52;
   }
   switch(curChar)
   {
      case 40:
         return jjMoveStringLiteralDfa53_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(51, active0);
}
static private int jjMoveStringLiteralDfa53_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(51, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(52, active0);
      return 53;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa54_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(52, active0);
}
static private int jjMoveStringLiteralDfa54_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(52, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(53, active0);
      return 54;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa55_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(53, active0);
}
static private int jjMoveStringLiteralDfa55_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(53, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(54, active0);
      return 55;
   }
   switch(curChar)
   {
      case 116:
         return jjMoveStringLiteralDfa56_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(54, active0);
}
static private int jjMoveStringLiteralDfa56_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(54, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(55, active0);
      return 56;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa57_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(55, active0);
}
static private int jjMoveStringLiteralDfa57_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(55, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(56, active0);
      return 57;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa58_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(56, active0);
}
static private int jjMoveStringLiteralDfa58_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(56, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(57, active0);
      return 58;
   }
   switch(curChar)
   {
      case 41:
         return jjMoveStringLiteralDfa59_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(57, active0);
}
static private int jjMoveStringLiteralDfa59_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(57, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(58, active0);
      return 59;
   }
   switch(curChar)
   {
      case 123:
         return jjMoveStringLiteralDfa60_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(58, active0);
}
static private int jjMoveStringLiteralDfa60_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(58, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(59, active0);
      return 60;
   }
   switch(curChar)
   {
      case 112:
         return jjMoveStringLiteralDfa61_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(59, active0);
}
static private int jjMoveStringLiteralDfa61_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(59, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(60, active0);
      return 61;
   }
   switch(curChar)
   {
      case 114:
         return jjMoveStringLiteralDfa62_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(60, active0);
}
static private int jjMoveStringLiteralDfa62_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(60, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(61, active0);
      return 62;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa63_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(61, active0);
}
static private int jjMoveStringLiteralDfa63_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(61, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(62, active0);
      return 63;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa64_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(62, active0);
}
static private int jjMoveStringLiteralDfa64_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(62, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(63, active0);
      return 64;
   }
   switch(curChar)
   {
      case 116:
         return jjMoveStringLiteralDfa65_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(63, active0);
}
static private int jjMoveStringLiteralDfa65_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(63, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(64, active0);
      return 65;
   }
   switch(curChar)
   {
      case 102:
         return jjMoveStringLiteralDfa66_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(64, active0);
}
static private int jjMoveStringLiteralDfa66_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(64, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(65, active0);
      return 66;
   }
   switch(curChar)
   {
      case 40:
         return jjMoveStringLiteralDfa67_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(65, active0);
}
static private int jjMoveStringLiteralDfa67_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(65, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(66, active0);
      return 67;
   }
   switch(curChar)
   {
      case 34:
         return jjMoveStringLiteralDfa68_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(66, active0);
}
static private int jjMoveStringLiteralDfa68_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(66, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(67, active0);
      return 68;
   }
   switch(curChar)
   {
      case 37:
         return jjMoveStringLiteralDfa69_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(67, active0);
}
static private int jjMoveStringLiteralDfa69_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(67, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(68, active0);
      return 69;
   }
   switch(curChar)
   {
      case 49:
         return jjMoveStringLiteralDfa70_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(68, active0);
}
static private int jjMoveStringLiteralDfa70_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(68, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(69, active0);
      return 70;
   }
   switch(curChar)
   {
      case 48:
         return jjMoveStringLiteralDfa71_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(69, active0);
}
static private int jjMoveStringLiteralDfa71_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(69, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(70, active0);
      return 71;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa72_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(70, active0);
}
static private int jjMoveStringLiteralDfa72_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(70, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(71, active0);
      return 72;
   }
   switch(curChar)
   {
      case 92:
         return jjMoveStringLiteralDfa73_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(71, active0);
}
static private int jjMoveStringLiteralDfa73_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(71, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(72, active0);
      return 73;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa74_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(72, active0);
}
static private int jjMoveStringLiteralDfa74_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(72, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(73, active0);
      return 74;
   }
   switch(curChar)
   {
      case 34:
         return jjMoveStringLiteralDfa75_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(73, active0);
}
static private int jjMoveStringLiteralDfa75_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(73, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(74, active0);
      return 75;
   }
   switch(curChar)
   {
      case 44:
         return jjMoveStringLiteralDfa76_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(74, active0);
}
static private int jjMoveStringLiteralDfa76_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(74, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(75, active0);
      return 76;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa77_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(75, active0);
}
static private int jjMoveStringLiteralDfa77_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(75, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(76, active0);
      return 77;
   }
   switch(curChar)
   {
      case 41:
         return jjMoveStringLiteralDfa78_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(76, active0);
}
static private int jjMoveStringLiteralDfa78_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(76, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(77, active0);
      return 78;
   }
   switch(curChar)
   {
      case 59:
         return jjMoveStringLiteralDfa79_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(77, active0);
}
static private int jjMoveStringLiteralDfa79_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(77, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(78, active0);
      return 79;
   }
   switch(curChar)
   {
      case 125:
         if ((active0 & 0x40L) != 0L)
            return jjStopAtPos(79, 6);
         break;
      default :
         break;
   }
   return jjStartNfa_0(78, active0);
}
static private int jjMoveNfa_0(int startState, int curPos)
{
   //int[] nextStates; // not used
   int startsAt = 0;
   jjnewStateCnt = 3;
   int i = 1;
   jjstateSet[0] = startState;
   //int j; // not used
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 0:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAdd(0);
                  break;
               case 2:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  jjstateSet[jjnewStateCnt++] = 2;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 2:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  jjCheckNAdd(2);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, "\160\165\142\154\151\143", 
"\43\151\156\143\154\165\144\145\40\74\163\164\144\151\157\56\150\76\15\12\43\151\156\143\154\165\144\145\40\74\163\164\144\142\157\157\154\56\150\76\15\12\166\157\151\144\40\160\162\151\156\164\50\151\156\164\40\156\51\173\160\162\151\156\164\146\50\42\45\61\60\144\134\156\42\54\156\51\73\175", "\143\154\141\163\163", "\163\164\141\164\151\143", "\166\157\151\144", 
"\123\164\162\151\156\147", "\145\170\164\145\156\144\163", "\162\145\164\165\162\156", "\151\156\164", 
"\142\157\157\154", "\164\162\165\145", "\146\141\154\163\145", "\151\146", "\145\154\163\145", 
"\167\150\151\154\145", "\160\162\151\156\164", "\154\145\156\147\164\150", "\164\150\151\163", 
"\156\145\167", "\41", "\72", "\73", "\54", "\56", "\75", "\46\46", "\74", "\76", "\50", 
"\51", "\133", "\135", "\173", "\175", "\53", "\55", "\52", null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT", 
};
static final long[] jjtoToken = {
   0xfffffffffe1L, 
};
static final long[] jjtoSkip = {
   0x1eL, 
};
static protected SimpleCharStream input_stream;
static private final int[] jjrounds = new int[3];
static private final int[] jjstateSet = new int[6];
static protected char curChar;
/** Constructor. */
public PA5TokenManager(SimpleCharStream stream){
   if (input_stream != null)
      throw new TokenMgrError("ERROR: Second call to constructor of static lexer. You must use ReInit() to initialize the static variables.", TokenMgrError.STATIC_LEXER_ERROR);
   input_stream = stream;
}

/** Constructor. */
public PA5TokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
static public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
static private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 3; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
static public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
static public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

static protected Token jjFillToken()
{
   final Token t;
   final String tokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   tokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, tokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

static int curLexState = 0;
static int defaultLexState = 0;
static int jjnewStateCnt;
static int jjround;
static int jjmatchedPos;
static int jjmatchedKind;

/** Get the next Token. */
public static Token getNextToken() 
{
  //int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

static private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
static private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
static private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

static private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
